{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material.ts","webpack:///./src/app/petshop/petshop.component.html","webpack:///./src/app/petshop/petshop.component.less","webpack:///./src/app/petshop/petshop.component.ts","webpack:///./src/app/pipes/info.pipe.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/app/services/pets.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n    <app-petshop></app-petshop>\\n</div>\\n\\n\"","module.exports = \".container {\\n  padding: 0 15px;\\n  margin: 0 auto;\\n  max-width: 1200px;\\n}\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'AdvancedPetShop';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\n\nimport {AppComponent} from './app.component';\nimport {MaterialModule} from './material';\nimport {PetshopComponent} from './petshop/petshop.component';\nimport {HttpService} from './services/http.service';\nimport {InfoPipe} from './pipes/info.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PetshopComponent,\n        InfoPipe\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [HttpService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\r\n\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatListModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatSliderModule\r\n    ],\r\n    exports: [\r\n        MatListModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatSliderModule\r\n    ],\r\n})\r\nexport class MaterialModule {}\r\n","module.exports = \"<header>\\n    <div class=\\\"logo\\\"></div>\\n</header>\\n\\n<article>\\n    <aside>\\n        <ul>\\n            <li><input class=\\\"add add-dog\\\" type=\\\"button\\\" (click)=\\\"showForm('dog')\\\"></li>\\n            <li><input class=\\\"add add-cat\\\" type=\\\"button\\\" (click)=\\\"showForm('cat')\\\"></li>\\n            <li><input class=\\\"add add-hamster\\\" type=\\\"button\\\" (click)=\\\"showForm('hamster')\\\"></li>\\n        </ul>\\n\\n        <div *ngIf=\\\"showFormAddPet\\\" class=\\\"form-add-pet\\\">\\n            <h3>Add {{typeOfPet}}</h3>\\n\\n            <form [formGroup]=\\\"formAddPet\\\">\\n                <mat-form-field *ngIf=\\\"typeOfPet !== 'hamster'\\\">\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" minlength=\\\"3\\\">\\n                    <mat-error>Min name length: 3</mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput type=\\\"number\\\" placeholder=\\\"Price\\\" formControlName=\\\"price\\\" min=\\\"1\\\">\\n                    <mat-error>Min price: $10</mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput type=\\\"color\\\" placeholder=\\\"Color\\\" formControlName=\\\"color\\\">\\n                </mat-form-field>\\n\\n                <mat-slider *ngIf=\\\"typeOfPet !== 'dog'\\\" formControlName=\\\"fluffy\\\"\\n                    thumbLabel\\n                    color=\\\"primary\\\"\\n                    [displayWith]=\\\"levelOfFluffy\\\"\\n                    tickInterval=\\\"1\\\"\\n                    min=\\\"1\\\"\\n                    max=\\\"3\\\">\\n                </mat-slider>\\n\\n\\n                <button class=\\\"add-pet\\\" mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!formAddPet.valid\\\" (click)=\\\"addPet()\\\">Add</button>\\n            </form>\\n        </div>\\n    </aside>\\n\\n    <!--lists from pets collection-->\\n    <section class=\\\"pet-shop-view\\\">\\n        <div>\\n            <h3>Cats</h3>\\n            <mat-nav-list>\\n                <mat-list-item *ngFor=\\\"let pet of cats\\\">\\n                    <a matLine>{{ pet | info }}</a>\\n                    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"delPet(pet._id)\\\">\\n                        <mat-icon>delete_forever</mat-icon>\\n                    </button>\\n                </mat-list-item>\\n            </mat-nav-list>\\n        </div>\\n\\n        <div>\\n            <h3>High cost</h3>\\n            <mat-nav-list>\\n                <mat-list-item *ngFor=\\\"let pet of expensive\\\">\\n                    <a matLine>{{ pet | info }}</a>\\n                    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"delPet(pet._id)\\\">\\n                        <mat-icon>delete_forever</mat-icon>\\n                    </button>\\n                </mat-list-item>\\n            </mat-nav-list>\\n        </div>\\n\\n        <div>\\n            <h3>Fluffy and white</h3>\\n            <mat-nav-list>\\n                <mat-list-item *ngFor=\\\"let pet of fluffyOrWhite\\\">\\n                    <a matLine>{{ pet | info }}</a>\\n                    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"delPet(pet._id)\\\">\\n                        <mat-icon>delete_forever</mat-icon>\\n                    </button>\\n                </mat-list-item>\\n            </mat-nav-list>\\n        </div>\\n    </section>\\n\\n</article>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<div class=\\\"active-img\\\"></div>\\n<div class=\\\"active-img\\\"></div>\\n<div class=\\\"active-img\\\"></div>\\n\"","module.exports = \"header {\\n  margin: 10px 0 40px 0;\\n  padding: 5px 0;\\n  border-bottom: 2px solid white;\\n}\\nheader .logo {\\n  width: 330px;\\n  height: 100px;\\n  background: url('logo.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\naside {\\n  width: 30%;\\n  margin: 0;\\n  float: left;\\n  position: relative;\\n}\\naside ul {\\n  margin: 0 auto;\\n  list-style-type: none;\\n}\\naside ul li:after {\\n  margin: 20px 0;\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\naside ul .add {\\n  width: 100px;\\n  height: 100px;\\n  border: none;\\n  outline: inherit;\\n  float: left;\\n}\\naside ul .add:hover {\\n  cursor: pointer;\\n}\\naside ul .add-cat {\\n  background: url('cat_default2.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\naside ul .add-cat:active {\\n  background: url('cat_active2.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\naside ul .add-dog {\\n  background: url('dog_default.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\naside ul .add-dog:active {\\n  background: url('dog_active.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\naside ul .add-hamster {\\n  background: url('hamster_default.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\naside ul .add-hamster:active {\\n  background: url('hamster_active.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\naside .form-add-pet {\\n  width: 47%;\\n  margin: 50px 5px;\\n  padding: 5px;\\n  border-radius: 5px;\\n  box-shadow: 1px 1px 10px 0.1px black;\\n  background-color: rgba(255, 255, 255, 0.4);\\n  position: absolute;\\n  top: 0;\\n  left: 45%;\\n}\\naside .form-add-pet h3 {\\n  text-align: center;\\n  font-size: 20px;\\n  margin: 5px;\\n  padding: 5px;\\n  color: #3f51b5;\\n}\\naside .form-add-pet form {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 10px;\\n  border-radius: 5px;\\n  background-color: white;\\n}\\naside .form-add-pet form .add-pet {\\n  margin: 2px;\\n  padding: 5px;\\n  min-width: 45%;\\n  line-height: 24px;\\n  border-radius: 5px;\\n}\\n.pet-shop-view {\\n  width: 65%;\\n  float: left;\\n}\\n.pet-shop-view div {\\n  width: 31%;\\n  padding: 5px;\\n  border-radius: 5px;\\n  float: left;\\n  margin: 50px 2px;\\n  box-shadow: 1px 1px 10px 0.1px black;\\n  background-color: rgba(255, 255, 255, 0.4);\\n}\\n.pet-shop-view div:nth-of-type(2) {\\n  margin-top: 0;\\n}\\n.pet-shop-view div:nth-of-type(3) {\\n  margin-top: 100px;\\n}\\n.pet-shop-view div h3 {\\n  text-align: center;\\n  font-size: 20px;\\n  margin: 5px;\\n  padding: 5px;\\n  color: #3f51b5;\\n}\\n.pet-shop-view div .mat-nav-list {\\n  padding: 0;\\n  border-radius: 5px;\\n  background-color: white;\\n}\\n.pet-shop-view div .mat-nav-list .mat-list-item {\\n  border-bottom: 1px solid #e4e4e4;\\n}\\n.active-img {\\n  width: 1px;\\n  height: 1px;\\n  opacity: 1;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.active-img:nth-of-type(1) {\\n  background: url('dog_active.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\n.active-img:nth-of-type(2) {\\n  background: url('cat_active2.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\n.active-img:nth-of-type(3) {\\n  background: url('hamster_active.png') no-repeat top center scroll;\\n  background-size: cover;\\n}\\n/*my mixings*/\\n.after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\nimport {HttpService} from '../services/http.service';\nimport {Pet, Dog, Cat, Hamster} from '../services/pets';\n\n\n@Component({\n    selector: 'app-petshop',\n    templateUrl: './petshop.component.html',\n    styleUrls: ['./petshop.component.less']\n})\nexport class PetshopComponent implements OnInit {\n    private pets: Pet[];\n    public cats: Pet[];\n    public expensive: Pet[];\n    public fluffyOrWhite: Pet[];\n\n    public formAddPet: FormGroup; // create form for adding pets\n    public showFormAddPet: boolean; // define to show the form or not\n    public typeOfPet: string; // define what type of pet is adding\n\n    constructor(private fb: FormBuilder, private service: HttpService) { }\n\n    ngOnInit() {\n        this.getPets();\n    }\n\n    // show or hide form for adding pets\n    showForm(type) {\n        this.typeOfPet = type;\n        this.createFormAddPet();\n        this.showFormAddPet = !this.showFormAddPet;\n    }\n\n    // get array of pets with HTTP from JSON\n    getPets() {\n        this.service.getPets()\n            .subscribe(data => {\n                if (data.length) {\n                    this.pets = data;\n                    this.renderPetsCategory();\n                }\n            });\n    }\n\n    // create form for adding any pet\n    createFormAddPet() {\n        if (this.typeOfPet === 'hamster') {\n\n            this.formAddPet = this.fb.group({\n                price: ['', [\n                    Validators.required,\n                    Validators.min(10)\n                ]],\n                color: '#555555',\n                fluffy: ''\n            });\n\n        } else {\n\n            this.formAddPet = this.fb.group({\n                name: ['', [\n                    Validators.required,\n                    Validators.minLength(3)\n                ]],\n                price: ['', [\n                    Validators.required,\n                    Validators.min(10)\n                ]],\n                color: '#555555',\n                fluffy: ''\n            });\n        }\n    }\n\n    // get value from fluffy select\n    levelOfFluffy(value: number) {\n        let level = '';\n\n        if (value === 1) {\n            level = 'bald';\n        }\n\n        if (value === 2) {\n            level = 'hairy';\n        }\n\n        if (value === 3) {\n            level = 'fluffy';\n        }\n\n        return level;\n    }\n\n    // create category with any type of pets\n    renderPetsCategory() {\n        // get array with cats\n        this.cats = getArrayOfCats(this.pets);\n\n        // get array of pets with a price above the average\n        this.expensive = getArrayExpensiveAnimals(this.pets);\n\n        // get array of white or fluffy pets\n        this.fluffyOrWhite = getArrayFluffyOrWhiteAnimals(this.pets);\n    }\n\n    // add new pet\n    addPet() {\n        this.service.addPet(this.formAddPet.value, this.typeOfPet)\n            .subscribe(data => {\n                this.pets = data;\n\n                this.showFormAddPet = !this.showFormAddPet;\n                this.renderPetsCategory();\n            });\n    }\n\n    // delete the pet\n    delPet(id) {\n        this.service.delPet(id)\n            .subscribe(data => {\n                this.pets = data;\n                this.renderPetsCategory();\n            });\n\n        this.renderPetsCategory();\n    }\n}\n\n\n// choose only cats\nfunction getArrayOfCats(animals) {\n    let cats = animals.filter(animal => (animal.type === 'Cat'));\n    return cats;\n}\n\n// choose animals with a price above the average\nfunction getArrayExpensiveAnimals(animals) {\n    let average = getAveragePrice(animals);\n\n    let expensive = animals.filter(animal => parseInt(animal.price) >= average);\n\n    return expensive;\n}\n\n// get average price all of the animals\nfunction getAveragePrice(animals) {\n    // get the price each of the animal\n    let arrayOfPrice = animals.map(animal => animal.price);\n    // calculate the average price\n    let average = arrayOfPrice.reduce((current, next) => parseInt(current) + parseInt(next)) / arrayOfPrice.length;\n\n    return average;\n}\n\n// choose white or fluffy animals\nfunction getArrayFluffyOrWhiteAnimals(animals) {\n    let fluffyOrWhite = animals.filter(animal => (animal.color === '#ffffff') || animal.fluffy);\n\n    return fluffyOrWhite;\n}\n\n// // add new pet\n// function addPet(pets, pet, type) {\n//     if (type === 'dog') {\n//         let name = pet.name,\n//             price = pet.price,\n//             color = pet.color;\n//\n//         pets.push(new Dog(name, price, color));\n//     }\n//\n//     if (type === 'cat') {\n//         let name = pet.name,\n//             price = pet.price,\n//             color = pet.color,\n//             fluffy = pet.fluffy === 3;\n//\n//         pets.push(new Cat(name, price, color, fluffy));\n//     }\n//\n//     if (type === 'hamster') {\n//         let price = pet.price,\n//             color = pet.color,\n//             fluffy = pet.fluffy === 'fluffy';\n//\n//         pets.push(new Hamster(price, color, fluffy));\n//     }\n// }\n\n// delete the pet\nfunction delPet(pets, id) {\n    // define index of the pet\n    let removeIndex = pets.map(pet => pet._id).indexOf(id);\n\n    pets.splice(removeIndex, 1);\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'info'\n})\nexport class InfoPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        let name = value.name ? value.name : 'Just hamster',\n            price = `$${value.price}`;\n\n        return `${name} - ${price}`;\n    }\n\n}\n","import {Injectable} from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError, tap, map} from 'rxjs/operators';\nimport {Pet, Dog, Cat, Hamster} from './pets';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {}\n\n    // http get any pet\n    public getPets(): Observable<Pet[]> {\n        return this.http.get<Pet[]>('/pets')\n            .pipe(\n                tap(pets => console.log(pets)),\n                catchError(this.handleError('getPets', []))\n            );\n    }\n\n    // http add new pet\n    public addPet(pet, type): Observable<Pet[]> {\n        let newPet = createPet(pet, type); // create new pet\n\n        return this.http.post<Pet[]>(`/pets`, newPet)\n            .pipe(\n                tap(pets => console.log(pets)),\n                catchError(this.handleError('getPets', []))\n            );\n    }\n\n    // http add new pet\n    public delPet(id): Observable<Pet[]> {\n        return this.http.delete<Pet[]>(`/pets/${id}`)\n            .pipe(\n                tap(pets => console.log(pets)),\n                catchError(this.handleError('getPets', []))\n            );\n    }\n\n    private handleError<T> (operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n            console.log(`${operation} failed: ${error.message}`); // log to console instead\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n\n\n// create new pet\nfunction createPet(pet, type) {\n    if (type === 'dog') {\n        let name = pet.name,\n            price = pet.price,\n            color = pet.color;\n\n        return new Dog(name, price, color);\n    }\n\n    if (type === 'cat') {\n        let name = pet.name,\n            price = pet.price,\n            color = pet.color,\n            fluffy = pet.fluffy === 3;\n\n        return new Cat(name, price, color, fluffy);\n    }\n\n    if (type === 'hamster') {\n        let price = pet.price,\n            color = pet.color,\n            fluffy = pet.fluffy === 3;\n\n        return new Hamster(price, color, fluffy);\n    }\n}","// pet classes\r\nexport class Pet {\r\n    type: string;\r\n    price: number;\r\n    color: string;\r\n\r\n    constructor(price, color) {\r\n        this.type = '';\r\n        this.price = price;\r\n        this.color = color;\r\n    }\r\n}\r\n\r\nexport class Dog extends Pet {\r\n    name: string;\r\n\r\n    constructor(name, price, color) {\r\n        super(price, color);\r\n        this.type = 'Dog';\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport class Cat extends Pet {\r\n    name: string;\r\n    fluffy: boolean;\r\n\r\n    constructor(name, price, color, fluffy) {\r\n        super(price, color);\r\n        this.type = 'Cat';\r\n        this.name = name;\r\n        this.fluffy = fluffy;\r\n    }\r\n}\r\n\r\nexport class Hamster extends Pet {\r\n    fluffy: boolean;\r\n\r\n    constructor(price, color, fluffy) {\r\n        super(price, color);\r\n        this.type = 'Hamster';\r\n        this.fluffy = fluffy;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}